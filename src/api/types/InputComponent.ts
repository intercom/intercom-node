/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Intercom from "../index";

/**
 * An input component is used to capture text input from the end user. You can submit the value of the input by:
 *
 * - Adding an `action` to the input component (which will render an inline button)
 * - Using a ButtonComponent (which will submit all interactive components in the canvas)
 */
export interface InputComponent {
    /** A unique identifier for the component. */
    id: string;
    /** The text shown above the input. */
    label?: string;
    /** An example value shown inside the component when it's empty. */
    placeholder?: string;
    /** An entered value which is already inside the component. */
    value?: string;
    /** This can be a Submit Action, URL Action, or Sheets Action. */
    action?: Intercom.ActionComponent;
    /** Styles the input. Default is `unsaved`. Prevent action with `saved`. */
    save_state?: InputComponent.SaveState;
    /** Styles the input and prevents the action. Default is false. Will be overridden if save_state is saved. */
    disabled?: boolean;
}

export namespace InputComponent {
    /**
     * Styles the input. Default is `unsaved`. Prevent action with `saved`.
     */
    export type SaveState = "unsaved" | "saved" | "failed";
    export const SaveState = {
        Unsaved: "unsaved",
        Saved: "saved",
        Failed: "failed",
    } as const;
}
